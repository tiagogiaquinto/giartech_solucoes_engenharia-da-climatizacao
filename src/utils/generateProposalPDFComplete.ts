import jsPDF from 'jspdf'
import autoTable from 'jspdf-autotable'
import { getCompanyInfo } from './companyData'

interface ServiceItem {
  service_name: string
  description?: string
  service_description?: string
  service_scope?: string
  technical_requirements?: string
  safety_warnings?: string
  execution_steps?: string
  expected_results?: string
  quality_standards?: string
  warranty_info?: string
  observations?: string
  unit: string
  unit_price: number
  quantity: number
  total_price: number
  estimated_duration?: number
  tempo_estimado_minutos?: number
}

interface Material {
  material_name: string
  description?: string
  unit?: string
  unit_price: number
  quantity: number
  total_price: number
}

interface ProposalData {
  proposal_number: string
  client: {
    name: string
    company_name?: string
    cnpj?: string
    email?: string
    phone?: string
    address_street?: string
    address_number?: string
    address_neighborhood?: string
    address_city?: string
    address_state?: string
    address_zipcode?: string
  }
  service_info?: {
    deadline?: string
    start_date?: string
    description?: string
  }
  services: ServiceItem[]
  materials: Material[]
  labor_cost?: number
  subtotal_services: number
  subtotal_materials: number
  subtotal: number
  discount: number
  final_total: number
  payment_methods: string[]
  payment_terms?: string
  payment_discount_info?: string
  warranty_period?: string
  warranty_terms?: string
  additional_info?: string
  special_conditions?: string
  created_at: string
}

export const generateProposalPDFComplete = async (proposalData: ProposalData) => {
  const companyInfo = await getCompanyInfo()

  const doc = new jsPDF()
  const pageWidth = doc.internal.pageSize.getWidth()
  const pageHeight = doc.internal.pageSize.getHeight()
  const margin = 15
  let yPos = 20

  // Cores
  const primaryColor: [number, number, number] = [23, 162, 184] // Teal
  const darkGray: [number, number, number] = [52, 58, 64]
  const lightGray: [number, number, number] = [248, 249, 250]

  const checkPageBreak = (neededSpace: number) => {
    if (yPos + neededSpace > pageHeight - 25) {
      addFooter()
      doc.addPage()
      yPos = margin
      return true
    }
    return false
  }

  const addFooter = () => {
    const footerY = pageHeight - 18

    // Linha separadora discreta
    doc.setDrawColor(220, 220, 220)
    doc.setLineWidth(0.3)
    doc.line(margin, footerY, pageWidth - margin, footerY)

    // Fonte pequena e discreta (Times New Roman)
    doc.setFont('times', 'normal')
    doc.setFontSize(7)
    doc.setTextColor(120, 120, 120)

    let yFooter = footerY + 3

    // Linha 1: Nome e Email
    doc.text(companyInfo.owner || 'TIAGO BRUNO GIAQUINTO', margin, yFooter)
    doc.text(`Email: ${companyInfo.email}`, pageWidth - margin, yFooter, { align: 'right' })

    yFooter += 3
    // Linha 2: CNPJ e Telefone
    doc.text(`CNPJ: ${companyInfo.cnpj}`, margin, yFooter)
    doc.text(`Tel: ${companyInfo.phone}`, pageWidth - margin, yFooter, { align: 'right' })

    yFooter += 3
    // Linha 3: Endere√ßo e Instagram
    doc.text(companyInfo.address, margin, yFooter)
    if (companyInfo.instagram) {
      doc.text(`@${companyInfo.instagram}`, pageWidth - margin, yFooter, { align: 'right' })
    }

    yFooter += 3
    // Linha 4: Cidade/Estado e Site
    doc.text(`${companyInfo.city}-${companyInfo.state} - CEP ${companyInfo.zip || '02734-010'}`, margin, yFooter)
    doc.text(companyInfo.website || 'tgarconnection.com.br', pageWidth - margin, yFooter, { align: 'right' })
  }

  // =====================================================
  // P√ÅGINA 1: PROPOSTA COMERCIAL
  // =====================================================

  // Cabe√ßalho com fundo
  doc.setFillColor(...primaryColor)
  doc.rect(0, 0, pageWidth, 55, 'F')

  // Logo circular (esquerda)
  doc.setFillColor(255, 255, 255)
  doc.circle(25, 25, 12, 'F')
  doc.setFontSize(20)
  doc.setFont('helvetica', 'bold')
  doc.setTextColor(...primaryColor)
  doc.text('G', 25, 30, { align: 'center' })

  // Nome da empresa
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(18)
  doc.setTextColor(255, 255, 255)
  doc.text(companyInfo.name, 42, 22)

  // Dados da empresa
  doc.setFont('times', 'normal')
  doc.setFontSize(8)
  let yHeader = 28
  doc.text(companyInfo.owner || 'Propriet√°rio', 42, yHeader)
  yHeader += 3.5
  doc.text(`CNPJ: ${companyInfo.cnpj}`, 42, yHeader)
  yHeader += 3.5
  doc.text(companyInfo.address, 42, yHeader)
  yHeader += 3.5
  doc.text(`${companyInfo.city}-${companyInfo.state} ‚Ä¢ CEP ${companyInfo.zip}`, 42, yHeader)

  // Dados de contato (direita)
  const rightX = pageWidth - margin
  doc.text(new Date().toLocaleString('pt-BR'), rightX, 15, { align: 'right' })
  yHeader = 28
  doc.text(companyInfo.email, rightX, yHeader, { align: 'right' })
  yHeader += 3.5
  doc.text(companyInfo.phone, rightX, yHeader, { align: 'right' })
  yHeader += 3.5
  if (companyInfo.instagram) {
    doc.text(`@${companyInfo.instagram}`, rightX, yHeader, { align: 'right' })
  }

  yPos = 65

  // T√≠tulo da proposta
  doc.setFillColor(...primaryColor)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 15, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(16)
  doc.setTextColor(255, 255, 255)
  doc.text(`PROPOSTA ${proposalData.proposal_number}`, pageWidth / 2, yPos + 10, { align: 'center' })

  yPos += 25

  // =====================================================
  // DADOS DO CLIENTE
  // =====================================================

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text(`Cliente: ${proposalData.client.name}`, margin + 3, yPos + 5.5)

  yPos += 12

  doc.setFont('times', 'normal')
  doc.setFontSize(9)
  doc.setTextColor(...darkGray)

  if (proposalData.client.company_name) {
    doc.text(proposalData.client.company_name, margin + 3, yPos)
    yPos += 4
  }

  if (proposalData.client.address_street) {
    const fullAddress = [
      proposalData.client.address_street,
      proposalData.client.address_number,
      proposalData.client.address_neighborhood,
      `${proposalData.client.address_city}, ${proposalData.client.address_state}`,
      `CEP: ${proposalData.client.address_zipcode}`
    ].filter(Boolean).join(', ')

    const addressLines = doc.splitTextToSize(fullAddress, pageWidth - 2 * margin - 6)
    doc.text(addressLines, margin + 3, yPos)
    yPos += addressLines.length * 4 + 4
  }

  // =====================================================
  // INFORMA√á√ïES DO SERVI√áO
  // =====================================================

  if (proposalData.service_info?.deadline) {
    checkPageBreak(25)

    doc.setFillColor(...lightGray)
    doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
    doc.setFont('helvetica', 'bold')
    doc.setFontSize(11)
    doc.setTextColor(...primaryColor)
    doc.text('Informa√ß√µes do Servi√ßo', margin + 3, yPos + 5.5)

    yPos += 12

    doc.setFont('times', 'normal')
    doc.setFontSize(9)
    doc.setTextColor(...darkGray)
    doc.text(`Prazo: ${proposalData.service_info.deadline}`, margin + 3, yPos)
    yPos += 8
  }

  // =====================================================
  // SERVI√áOS E PRODUTOS
  // =====================================================

  checkPageBreak(40)

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text('Servi√ßos e Produtos', margin + 3, yPos + 5.5)

  yPos += 12

  // Tabela de servi√ßos
  const tableData: any[] = []

  proposalData.services.forEach(service => {
    // Montar descri√ß√£o completa
    let fullDesc = service.service_name

    const desc = service.service_description || service.description
    if (desc && desc !== fullDesc) {
      fullDesc += `\n${desc}`
    }

    if (service.service_scope) {
      fullDesc += `\n\nESCOPO:\n${service.service_scope}`
    }

    if (service.technical_requirements) {
      fullDesc += `\n\nREQUISITOS:\n${service.technical_requirements}`
    }

    if (service.safety_warnings) {
      fullDesc += `\n\n‚ö† SEGURAN√áA:\n${service.safety_warnings}`
    }

    if (service.execution_steps) {
      fullDesc += `\n\nPASSOS:\n${service.execution_steps}`
    }

    if (service.expected_results) {
      fullDesc += `\n\nRESULTADOS:\n${service.expected_results}`
    }

    if (service.quality_standards) {
      fullDesc += `\n\nQUALIDADE:\n${service.quality_standards}`
    }

    if (service.warranty_info) {
      fullDesc += `\n\nüõ° GARANTIA:\n${service.warranty_info}`
    }

    if (service.observations) {
      fullDesc += `\n\nOBS:\n${service.observations}`
    }

    const duration = service.estimated_duration || service.tempo_estimado_minutos
    if (duration) {
      fullDesc += `\n\n‚è± ${duration}min`
    }

    tableData.push([
      fullDesc,
      service.unit,
      service.quantity,
      `R$ ${service.unit_price.toFixed(2)}`,
      `R$ ${service.total_price.toFixed(2)}`
    ])
  })

  // Adicionar materiais se houver
  if (proposalData.materials && proposalData.materials.length > 0) {
    proposalData.materials.forEach(material => {
      tableData.push([
        material.material_name,
        material.unit || 'un.',
        material.quantity,
        `R$ ${material.unit_price.toFixed(2)}`,
        `R$ ${material.total_price.toFixed(2)}`
      ])
    })
  }

  // Adicionar m√£o de obra se houver
  if (proposalData.labor_cost && proposalData.labor_cost > 0) {
    tableData.push([
      'M√£o de obra',
      'un.',
      1,
      `R$ ${proposalData.labor_cost.toFixed(2)}`,
      `R$ ${proposalData.labor_cost.toFixed(2)}`
    ])
  }

  autoTable(doc, {
    startY: yPos,
    head: [['Descri√ß√£o', 'Un.', 'Qtd', 'Pre√ßo Unit.', 'Total']],
    body: tableData,
    theme: 'grid',
    styles: {
      fontSize: 9,
      cellPadding: 3,
      textColor: darkGray
    },
    headStyles: {
      fillColor: primaryColor,
      textColor: [255, 255, 255],
      fontStyle: 'bold',
      halign: 'center'
    },
    columnStyles: {
      0: { cellWidth: 90 },
      1: { cellWidth: 20, halign: 'center' },
      2: { cellWidth: 20, halign: 'center' },
      3: { cellWidth: 30, halign: 'right' },
      4: { cellWidth: 30, halign: 'right' }
    },
    margin: { left: margin, right: margin }
  })

  yPos = (doc as any).lastAutoTable.finalY + 5

  // Totais
  const totalsX = pageWidth - margin - 50

  doc.setFont('times', 'normal')
  doc.setFontSize(10)
  doc.setTextColor(...darkGray)

  doc.text('Subtotal:', totalsX, yPos, { align: 'right' })
  doc.text(`R$ ${proposalData.subtotal.toFixed(2)}`, pageWidth - margin, yPos, { align: 'right' })
  yPos += 5

  if (proposalData.discount > 0) {
    doc.setTextColor(231, 76, 60)
    doc.text('Desconto:', totalsX, yPos, { align: 'right' })
    doc.text(`- R$ ${proposalData.discount.toFixed(2)}`, pageWidth - margin, yPos, { align: 'right' })
    yPos += 5
  }

  // Linha
  doc.setDrawColor(...darkGray)
  doc.setLineWidth(1)
  doc.line(totalsX - 10, yPos, pageWidth - margin, yPos)
  yPos += 7

  // Total final
  doc.setFillColor(...primaryColor)
  doc.rect(totalsX - 15, yPos - 5, pageWidth - totalsX + 15 - margin, 10, 'F')

  doc.setFont('helvetica', 'bold')
  doc.setFontSize(12)
  doc.setTextColor(255, 255, 255)
  doc.text('TOTAL:', totalsX, yPos + 2, { align: 'right' })
  doc.text(`R$ ${proposalData.final_total.toFixed(2)}`, pageWidth - margin - 3, yPos + 2, { align: 'right' })

  yPos += 15

  // =====================================================
  // FORMA DE PAGAMENTO
  // =====================================================

  checkPageBreak(50)

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text('Forma de Pagamento', margin + 3, yPos + 5.5)

  yPos += 12

  doc.setFont('times', 'normal')
  doc.setFontSize(9)
  doc.setTextColor(...darkGray)

  // M√©todos de pagamento
  doc.text(`M√©todos: ${proposalData.payment_methods.join(', ')}`, margin + 3, yPos)
  yPos += 5

  // PIX
  doc.text(`PIX: ${companyInfo.pix || companyInfo.cnpj}`, margin + 3, yPos)
  yPos += 5

  // Dados banc√°rios
  doc.text(`Banco: ${companyInfo.bank_name || 'CORA'} | Ag: ${companyInfo.bank_agency || 'null'} | Conta: ${companyInfo.bank_account || '0001'}`, margin + 3, yPos)
  yPos += 5

  // Forma de pagamento
  if (proposalData.payment_terms) {
    doc.text(`Forma de Pagamento: ${proposalData.payment_terms}`, margin + 3, yPos)
    yPos += 5
  }

  // Informa√ß√£o de desconto
  if (proposalData.payment_discount_info) {
    doc.text(proposalData.payment_discount_info, margin + 3, yPos)
    yPos += 5
  }

  // =====================================================
  // NOVA P√ÅGINA: GARANTIA E CONTRATO
  // =====================================================

  addFooter()
  doc.addPage()
  yPos = margin

  // =====================================================
  // GARANTIA
  // =====================================================

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text('Garantia', margin + 3, yPos + 5.5)

  yPos += 12

  doc.setFont('times', 'normal')
  doc.setFontSize(9)
  doc.setTextColor(...darkGray)

  if (proposalData.warranty_period) {
    doc.text(`Per√≠odo: ${proposalData.warranty_period}`, margin + 3, yPos)
    yPos += 8
  }

  // Termos de garantia detalhados
  const warrantyText = proposalData.warranty_terms || `‚Ä¢ Garantias referentes √† sistemas de novo em tubula√ß√µes antigas, s√≥ ser√£o v√°lidas, com os processos de descontamina√ß√£o das tubula√ß√µes antigas.

Garantia de (EQUIPAMENTOS NOVOS) que podem ser de 5 a 10 anos, s√≥ s√£o v√°lidas com manuten√ß√£o semestral comprovada COM LAUDO T√âCNICO.

Garantias extendidas pela nossa empresa, s√£o concedidas em caso de compra das m√°quinas conosco, as mesmas deixam de ter validade legal de 3 meses e podem ter at√© 12 meses de acordo com o tipo e capacidade do sistema, mediante a manuten√ß√£o dos equipamentos realizadas conosco nos prazos estipulados pelo fabricante.`

  const warrantyLines = doc.splitTextToSize(warrantyText, pageWidth - 2 * margin - 6)
  doc.text(warrantyLines, margin + 3, yPos)
  yPos += warrantyLines.length * 4 + 10

  // =====================================================
  // CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS
  // =====================================================

  checkPageBreak(60)

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text('Contrato de Presta√ß√£o de Servi√ßos', margin + 3, yPos + 5.5)

  yPos += 12

  doc.setFont('times', 'normal')
  doc.setFontSize(8)
  doc.setTextColor(...darkGray)

  const contractText = `CONTRATANTE: ${proposalData.client.company_name || proposalData.client.name}
CNPJ/CPF: ${proposalData.client.cnpj || 'N√£o informado'}

CONTRATADA: ${companyInfo.name}
CNPJ: ${companyInfo.cnpj}

CL√ÅUSULA 1¬™ - DO OBJETO
O presente contrato tem por objeto a presta√ß√£o dos servi√ßos descritos nesta proposta, conforme especifica√ß√µes t√©cnicas e condi√ß√µes estabelecidas.

CL√ÅUSULA 2¬™ - DO VALOR E FORMA DE PAGAMENTO
O valor total dos servi√ßos √© de R$ ${proposalData.final_total.toFixed(2)} (${numberToWords(proposalData.final_total)}), a ser pago conforme condi√ß√µes estabelecidas nesta proposta.

CL√ÅUSULA 3¬™ - DO PRAZO
Os servi√ßos ser√£o executados no prazo de ${proposalData.service_info?.deadline || '30 dias'}, contados a partir da assinatura deste contrato e aprova√ß√£o do pagamento.

CL√ÅUSULA 4¬™ - DAS OBRIGA√á√ïES DA CONTRATADA
a) Executar os servi√ßos com qualidade e dentro dos padr√µes t√©cnicos;
b) Fornecer todos os materiais e equipamentos necess√°rios √† execu√ß√£o dos servi√ßos;
c) Manter equipe t√©cnica qualificada e habilitada;
d) Respeitar os prazos estabelecidos.

CL√ÅUSULA 5¬™ - DAS OBRIGA√á√ïES DO CONTRATANTE
a) Efetuar o pagamento na forma e prazo estabelecidos;
b) Fornecer todas as informa√ß√µes necess√°rias √† execu√ß√£o dos servi√ßos;
c) Garantir acesso ao local de execu√ß√£o dos servi√ßos;
d) Comunicar imediatamente qualquer problema ou irregularidade.

CL√ÅUSULA 6¬™ - DA GARANTIA
Os servi√ßos prestados possuem garantia de ${proposalData.warranty_period || '3 meses'}, conforme termos especificados nesta proposta.

CL√ÅUSULA 7¬™ - DA RESCIS√ÉO
O presente contrato poder√° ser rescindido por qualquer das partes mediante comunica√ß√£o pr√©via de 15 (quinze) dias, sem preju√≠zo das obriga√ß√µes j√° assumidas.

CL√ÅUSULA 8¬™ - DO FORO
Fica eleito o foro da comarca de ${companyInfo.city || 'S√£o Paulo'}-${companyInfo.state || 'SP'} para dirimir quaisquer d√∫vidas oriundas do presente contrato.`

  const contractLines = doc.splitTextToSize(contractText, pageWidth - 2 * margin - 6)
  doc.text(contractLines, margin + 3, yPos)
  yPos += contractLines.length * 3.5 + 10

  // =====================================================
  // OBSERVA√á√ïES
  // =====================================================

  checkPageBreak(30)

  doc.setFillColor(...lightGray)
  doc.rect(margin, yPos, pageWidth - 2 * margin, 8, 'F')
  doc.setFont('helvetica', 'bold')
  doc.setFontSize(11)
  doc.setTextColor(...primaryColor)
  doc.text('Observa√ß√µes', margin + 3, yPos + 5.5)

  yPos += 12

  doc.setFont('times', 'normal')
  doc.setFontSize(9)
  doc.setTextColor(...darkGray)

  const observations = proposalData.additional_info || 'Trabalhamos para que seus projetos, se tornem realidade.. Obrigado pela confian√ßa\n\nobrigado pela confian√ßa, estaremos √† disposi√ß√£o.'
  const obsLines = doc.splitTextToSize(observations, pageWidth - 2 * margin - 6)
  doc.text(obsLines, margin + 3, yPos)

  // =====================================================
  // RODAP√â FINAL
  // =====================================================

  addFooter()

  // Atualizar contagem de p√°ginas no rodap√©
  const totalPages = doc.getNumberOfPages()
  for (let i = 1; i <= totalPages; i++) {
    doc.setPage(i)
    doc.setFont('times', 'normal')
    doc.setFontSize(7)
    doc.setTextColor(...darkGray)
    doc.text(`P√°gina ${i} de ${totalPages}`, pageWidth / 2, pageHeight - 2, { align: 'center' })
  }

  return doc
}

// Fun√ß√£o auxiliar para converter n√∫mero em extenso (simplificada)
function numberToWords(value: number): string {
  const intValue = Math.floor(value)
  const cents = Math.round((value - intValue) * 100)

  // Implementa√ß√£o b√°sica
  const unidades = ['', 'um', 'dois', 'tr√™s', 'quatro', 'cinco', 'seis', 'sete', 'oito', 'nove']
  const dezenas = ['', '', 'vinte', 'trinta', 'quarenta', 'cinquenta', 'sessenta', 'setenta', 'oitenta', 'noventa']
  const especiais = ['dez', 'onze', 'doze', 'treze', 'quatorze', 'quinze', 'dezesseis', 'dezessete', 'dezoito', 'dezenove']

  if (intValue === 0) return 'zero reais'
  if (intValue < 10) return `${unidades[intValue]} ${intValue === 1 ? 'real' : 'reais'}`
  if (intValue < 20) return `${especiais[intValue - 10]} reais`
  if (intValue < 100) {
    const dez = Math.floor(intValue / 10)
    const uni = intValue % 10
    return `${dezenas[dez]}${uni > 0 ? ' e ' + unidades[uni] : ''} reais`
  }

  return `${intValue.toLocaleString('pt-BR')} reais`
}

export default generateProposalPDFComplete

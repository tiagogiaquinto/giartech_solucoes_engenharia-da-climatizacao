-- ========================================
-- AGREGA√á√ÉO DE DOCUMENTA√á√ÉO PARA THOMAZ AI
-- Data: 2025-10-28
-- ========================================

-- Limpar dados antigos de documenta√ß√£o (manter apenas registros importantes)
DELETE FROM thomaz_knowledge_base WHERE category = 'system_documentation' AND updated_at < NOW() - INTERVAL '7 days';

-- ========================================
-- 1. CONSOLIDA√á√ÉO DO MENU FINANCEIRO
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Consolida√ß√£o do Menu Financeiro - Fase 6',
  '# CONSOLIDA√á√ÉO DO MENU FINANCEIRO

## Resumo
Reduzimos o menu financeiro de 9 itens para 3 m√≥dulos consolidados (67% de redu√ß√£o), organizando funcionalidades relacionadas em abas internas.

## Estrutura Nova
### üí∞ Financeiro (/financeiro)
- Dashboard: Vis√£o geral integrada
- Movimenta√ß√µes: Receitas, despesas e DRE
- An√°lise: EBITDA, ROI, margens
- Contas Banc√°rias: Gest√£o de contas
- Categorias: Organiza√ß√£o financeira

### üëî CFO & Executivo (/executivo)
- Dashboard CFO: 20+ KPIs executivos com cards interativos
- Credit Scoring: An√°lise de risco de clientes
- Metas & Targets: Acompanhamento de objetivos
- Alertas Cr√≠ticos: Monitoramento

### üìÑ Relat√≥rios (/relatorios)
- Dashboards: Relat√≥rios interativos
- PDFs Profissionais: Para impress√£o
- Customizados: Relat√≥rios personalizados
- Hist√≥rico: Relat√≥rios anteriores

## Cards CFO Interativos
Todos os 4 cards principais s√£o funcionais:
1. Receita Total: Detalhes de despesas e lucro
2. EBITDA: Margens bruta, operacional e EBITDA
3. ROI: Break-even, payback e ROI
4. Capital de Giro: Receb√≠veis, pag√°veis e capital l√≠quido

Intera√ß√µes:
- Hover: Anima√ß√£o e sombra
- Click no card: Navega para /financeiro
- Click no (i): Expande/colapsa detalhes
- Trends visuais: ‚Üë verde (positivo) ou ‚Üì vermelho (negativo)

## Componentes Criados
- TabContainer.tsx: Sistema de abas reutiliz√°vel
- InteractiveKPICard.tsx: Cards interativos
- FinanceiroConsolidado.tsx: M√≥dulo financeiro
- ExecutivoConsolidado.tsx: M√≥dulo executivo
- RelatoriosConsolidado.tsx: M√≥dulo de relat√≥rios
- CreditScoring.tsx: An√°lise de cr√©dito

## Benef√≠cios
- Menu 67% mais limpo
- Navega√ß√£o mais intuitiva
- Cards 100% funcionais
- Interface profissional
- Performance otimizada',
  'system_documentation',
  ARRAY['menu', 'financeiro', 'cfo', 'consolida√ß√£o', 'cards-interativos', 'fase-6'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'implementado',
    'priority', 'high'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 2. ESTRUTURA DO SISTEMA
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Arquitetura Completa do Sistema Giartech',
  '# ARQUITETURA DO SISTEMA GIARTECH

## Stack Tecnol√≥gico
- Frontend: React 18 + TypeScript + Vite
- UI: TailwindCSS + Framer Motion
- Backend: Supabase (PostgreSQL + Edge Functions)
- Autentica√ß√£o: Supabase Auth
- Storage: Supabase Storage

## Estrutura de Pastas
```
src/
‚îú‚îÄ‚îÄ components/     # Componentes reutiliz√°veis
‚îÇ   ‚îú‚îÄ‚îÄ TabContainer.tsx
‚îÇ   ‚îú‚îÄ‚îÄ InteractiveKPICard.tsx
‚îÇ   ‚îî‚îÄ‚îÄ navigation/
‚îú‚îÄ‚îÄ pages/         # P√°ginas da aplica√ß√£o
‚îÇ   ‚îú‚îÄ‚îÄ FinanceiroConsolidado.tsx
‚îÇ   ‚îú‚îÄ‚îÄ ExecutivoConsolidado.tsx
‚îÇ   ‚îî‚îÄ‚îÄ CFODashboard.tsx
‚îú‚îÄ‚îÄ services/      # Servi√ßos e integra√ß√µes
‚îú‚îÄ‚îÄ hooks/         # React hooks customizados
‚îú‚îÄ‚îÄ utils/         # Fun√ß√µes utilit√°rias
‚îî‚îÄ‚îÄ lib/          # Configura√ß√µes e bibliotecas
```

## Banco de Dados
### Tabelas Principais
- customers: Clientes (PF e PJ)
- service_orders: Ordens de servi√ßo
- service_order_items: Itens das OS
- service_order_materials: Materiais das OS
- service_order_labor: M√£o de obra das OS
- finance_entries: Lan√ßamentos financeiros
- financial_categories: Categorias financeiras
- bank_accounts: Contas banc√°rias
- inventory_items: Itens de estoque
- service_catalog: Cat√°logo de servi√ßos
- employees: Funcion√°rios
- suppliers: Fornecedores

### Views Importantes
- v_cfo_kpis: KPIs executivos consolidados
- v_customer_credit_scoring: An√°lise de cr√©dito
- v_customer_intelligence: Intelig√™ncia de clientes
- v_business_kpis: KPIs de neg√≥cio
- v_financial_dashboard: Dashboard financeiro

### Edge Functions
- thomaz-ai: IA conversacional do Thomaz
- buscar-cep: Busca de endere√ßos
- buscar-cnpj: Busca de CNPJs
- send-email: Envio de emails
- whatsapp-connect: Integra√ß√£o WhatsApp

## Funcionalidades Principais
1. Gest√£o de Clientes (PF/PJ)
2. Ordens de Servi√ßo (completas)
3. Gest√£o Financeira (completa)
4. Dashboard CFO (20+ KPIs)
5. Credit Scoring (autom√°tico)
6. Cat√°logo de Servi√ßos
7. Controle de Estoque
8. Gest√£o de Funcion√°rios
9. WhatsApp CRM
10. Thomaz AI (assistente inteligente)',
  'system_documentation',
  ARRAY['arquitetura', 'estrutura', 'tecnologia', 'banco-dados'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'atualizado'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 3. ROTAS DO SISTEMA
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Mapa Completo de Rotas',
  '# ROTAS DO SISTEMA

## Principais Rotas

### Gest√£o
- `/` - In√≠cio/Dashboard principal
- `/calendar` - Agenda de compromissos
- `/client-management` - Gest√£o de clientes
- `/suppliers` - Gest√£o de fornecedores
- `/purchasing` - Compras e pedidos
- `/service-orders` - Ordens de servi√ßo
- `/service-orders/create` - Criar nova OS
- `/service-orders/:id/view` - Visualizar OS
- `/rotas` - Rastreamento de rotas

### Financeiro (Consolidado)
- `/financeiro` - Centro financeiro com 5 abas
  - Dashboard
  - Movimenta√ß√µes
  - An√°lise
  - Contas Banc√°rias
  - Categorias

### Executivo (Consolidado)
- `/executivo` - M√≥dulo executivo com 4 abas
  - Dashboard CFO
  - Credit Scoring
  - Metas & Targets
  - Alertas Cr√≠ticos

### Relat√≥rios (Consolidado)
- `/relatorios` - M√≥dulo de relat√≥rios com 4 abas
  - Dashboards
  - PDFs Profissionais
  - Customizados
  - Hist√≥rico

### Operacional
- `/service-catalog` - Cat√°logo de servi√ßos
- `/inventory` - Controle de estoque
- `/automacoes` - Workflows e automa√ß√µes

### Comunica√ß√£o
- `/whatsapp-crm` - WhatsApp CRM
- `/email/inbox` - Email corporativo
- `/thomaz` - Thomaz AI chat

### Sistema
- `/digital-library` - Biblioteca digital
- `/funcionarios` - Gest√£o de funcion√°rios
- `/users` - Gest√£o de usu√°rios
- `/access-management` - Controle de acessos
- `/audit-logs` - Logs de auditoria
- `/document-templates` - Templates de documentos
- `/visual-customization` - Personaliza√ß√£o visual
- `/settings` - Configura√ß√µes gerais

## Rotas Antigas (Ainda Funcionam)
- `/financial` - Integra√ß√£o financeira (agora em /financeiro)
- `/financial-management` - Gest√£o financeira (agora em /financeiro)
- `/financial-analysis` - An√°lise financeira (agora em /financeiro)
- `/dashboard-cfo` - Dashboard CFO (agora em /executivo)
- `/credit-scoring` - Credit scoring (agora em /executivo)
- `/reports` - Relat√≥rios (agora em /relatorios)
- `/relatorios-avancados` - Relat√≥rios avan√ßados (agora em /relatorios)',
  'system_documentation',
  ARRAY['rotas', 'navega√ß√£o', 'urls', 'menu'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'atualizado'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 4. FUNCIONALIDADES DO CFO DASHBOARD
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'CFO Dashboard - Cards Interativos',
  '# CFO DASHBOARD - CARDS INTERATIVOS

## Vis√£o Geral
O Dashboard CFO possui 4 cards principais totalmente funcionais e interativos.

## Card 1: Receita Total üí∞
**Cor:** Verde (from-green-500 to-emerald-600)
**Valor Principal:** Receita total do per√≠odo
**Subtitle:** Lucro l√≠quido
**Trend:** Margem de lucro (%)

### Detalhes Expand√≠veis
1. Despesas totais
2. Lucro l√≠quido
3. Margem de lucro (%)

### Intera√ß√µes
- Hover: Anima√ß√£o + shadow
- Click no card: Navega para /financeiro
- Click no (i): Expande/colapsa detalhes

## Card 2: EBITDA üìà
**Cor:** Azul (from-blue-500 to-cyan-600)
**Valor Principal:** EBITDA do per√≠odo
**Subtitle:** Margem EBITDA (%)
**Trend:** Margem EBITDA (%)

### Detalhes Expand√≠veis
1. Margem Bruta (%)
2. Margem Operacional (%)
3. Margem EBITDA (%)

### C√°lculo
EBITDA = Lucro Operacional + Deprecia√ß√£o + Amortiza√ß√£o

## Card 3: ROI üéØ
**Cor:** Roxo (from-purple-500 to-pink-600)
**Valor Principal:** ROI (%)
**Subtitle:** Break-even point
**Trend:** ROI (%)

### Detalhes Expand√≠veis
1. Break-even (R$)
2. Payback period (dias)
3. ROI (%)

### C√°lculo
ROI = (Lucro L√≠quido / Investimento Total) √ó 100

## Card 4: Capital de Giro üíº
**Cor:** Laranja (from-orange-500 to-red-600)
**Valor Principal:** Capital de giro l√≠quido
**Subtitle:** Efici√™ncia operacional (%)
**Trend:** Efici√™ncia (%)

### Detalhes Expand√≠veis
1. Contas a receber (R$)
2. Contas a pagar (R$)
3. Capital l√≠quido (R$)

### C√°lculo
Capital de Giro = Contas a Receber - Contas a Pagar

## Outros Componentes

### Alertas Financeiros
- Lista de alertas ativos
- Severidade: Critical, Warning, Info
- Valores atuais vs limites
- Data de cria√ß√£o

### An√°lise de Margens
Indicadores de rentabilidade:
1. Margem Bruta (meta: 60%)
2. Margem Operacional (meta: 40%)
3. Margem L√≠quida (meta: 30%)
4. Margem EBITDA (meta: 35%)

### Top 10 Clientes
- Classifica√ß√£o ABC
- Score de cr√©dito
- Risco de churn
- Receita total
- Valor m√©dio de pedido',
  'system_documentation',
  ARRAY['cfo', 'dashboard', 'kpis', 'cards', 'interativos'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'implementado'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 5. CREDIT SCORING
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Sistema de Credit Scoring',
  '# SISTEMA DE CREDIT SCORING

## Vis√£o Geral
Sistema automatizado de an√°lise de cr√©dito de clientes com score de 0-1000 pontos.

## Categorias de Risco

### 1. Excelente (800-1000)
- **Cor:** Verde
- **Limite Sugerido:** R$ 50.000+
- **Caracter√≠sticas:**
  - Hist√≥rico de pagamento perfeito
  - Alta frequ√™ncia de compras
  - Ticket m√©dio elevado
  - Baix√≠ssimo risco

### 2. Bom (600-799)
- **Cor:** Azul
- **Limite Sugerido:** R$ 20.000 - R$ 50.000
- **Caracter√≠sticas:**
  - Bom hist√≥rico de pagamento
  - Compras regulares
  - Risco baixo

### 3. M√©dio (400-599)
- **Cor:** Amarelo
- **Limite Sugerido:** R$ 10.000 - R$ 20.000
- **Caracter√≠sticas:**
  - Hist√≥rico irregular
  - Alguns atrasos
  - Risco moderado

### 4. Alto Risco (200-399)
- **Cor:** Laranja
- **Limite Sugerido:** R$ 5.000 - R$ 10.000
- **Caracter√≠sticas:**
  - Hist√≥rico ruim
  - Atrasos frequentes
  - Risco elevado

### 5. Bloqueado (0-199)
- **Cor:** Vermelho
- **Limite Sugerido:** R$ 0 (bloqueado)
- **Caracter√≠sticas:**
  - Inadimpl√™ncia grave
  - M√∫ltiplos atrasos
  - Risco cr√≠tico

## C√°lculo do Score

### Fatores Considerados (peso)
1. **Hist√≥rico de Pagamentos (40%)**
   - Pagamentos em dia: +10 pontos cada
   - Atrasos de 1-7 dias: -5 pontos
   - Atrasos de 8-30 dias: -15 pontos
   - Atrasos >30 dias: -30 pontos

2. **Volume de Compras (25%)**
   - Total de compras
   - Frequ√™ncia
   - Crescimento

3. **Ticket M√©dio (20%)**
   - Valor m√©dio por pedido
   - Consist√™ncia

4. **Tempo de Relacionamento (10%)**
   - Meses como cliente
   - Primeira compra

5. **Diversifica√ß√£o (5%)**
   - Variedade de produtos/servi√ßos
   - Quantidade de categorias

## Funcionalidades

### P√°gina Principal
- 5 cards de estat√≠sticas (clic√°veis para filtrar)
- Busca por nome de cliente
- Tabela com todos os clientes
- Bot√£o "Recalcular Todos"

### Filtros
- Por categoria de risco
- Por nome (busca)
- Por tipo (PF/PJ)

### Informa√ß√µes Exibidas
- Nome do cliente
- Tipo (PF/PJ)
- Score (0-1000)
- Categoria de risco
- Limite sugerido
- Total de compras

## Rec√°lculo
- Manual: Bot√£o "Recalcular Todos"
- Autom√°tico: Fun√ß√£o `recalculate_all_credit_scores()`
- Atualiza√ß√£o: Ap√≥s cada novo lan√ßamento financeiro

## View no Banco
```sql
v_customer_credit_scoring
- customer_id
- customer_name
- customer_type
- credit_score
- risk_category
- suggested_credit_limit
- total_purchases
- payment_history_score
- last_updated
```',
  'system_documentation',
  ARRAY['credit-scoring', 'risco', 'clientes', 'an√°lise-cr√©dito'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'implementado'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 6. GUIA DE USO DO SISTEMA
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Guia R√°pido de Uso do Sistema',
  '# GUIA R√ÅPIDO DE USO

## Acesso Inicial
1. Abra o sistema no navegador
2. Fa√ßa login (ou acesse diretamente - sistema est√° aberto)
3. Voc√™ ver√° o Dashboard inicial

## Navega√ß√£o Principal

### Menu Lateral
O menu est√° organizado em grupos:

**GEST√ÉO**
- In√≠cio: Dashboard principal
- Agenda: Compromissos e eventos
- Clientes: Cadastro e gest√£o
- Fornecedores: Cadastro e gest√£o
- Compras: Pedidos de compra
- Ordens de Servi√ßo: Criar e gerenciar OS
- Rotas: Rastreamento

**FINANCEIRO** (3 m√≥dulos consolidados)
- üí∞ Financeiro: Centro financeiro completo
- üëî CFO & Executivo: An√°lises executivas
- üìÑ Relat√≥rios: Todos os relat√≥rios

**OPERACIONAL**
- Cat√°logo de Servi√ßos
- Estoque
- Automa√ß√µes

**COMUNICA√á√ÉO**
- WhatsApp CRM
- Email Corporativo
- Thomaz AI

**SISTEMA**
- Biblioteca Digital
- Funcion√°rios
- Usu√°rios
- Acessos
- Auditoria
- Templates
- Personaliza√ß√£o
- Configura√ß√µes

## Como Usar M√≥dulos Consolidados

### Financeiro
1. Clique em "Financeiro" no menu
2. Selecione a aba desejada:
   - **Dashboard:** Vis√£o geral
   - **Movimenta√ß√µes:** Adicionar receitas/despesas
   - **An√°lise:** Ver indicadores (EBITDA, ROI)
   - **Contas:** Gerenciar contas banc√°rias
   - **Categorias:** Organizar categorias

### CFO & Executivo
1. Clique em "CFO & Executivo" no menu
2. Explore as abas:
   - **Dashboard CFO:** Veja KPIs executivos
   - **Credit Scoring:** Analise risco de clientes
   - **Metas:** Acompanhe objetivos
   - **Alertas:** Veja problemas cr√≠ticos

### Relat√≥rios
1. Clique em "Relat√≥rios" no menu
2. Escolha o tipo:
   - **Dashboards:** Visualiza√ß√µes interativas
   - **PDFs:** Relat√≥rios para impress√£o
   - **Customizados:** Crie seus pr√≥prios
   - **Hist√≥rico:** Acesse antigos

## Interagindo com Cards CFO

### Passar o Mouse
- Card sobe suavemente
- Sombra aumenta
- Mostra interatividade

### Clicar no Card
- Navega para p√°gina relacionada
- Ex: Card "Receita" ‚Üí vai para /financeiro

### Clicar no √çcone (i)
- Expande detalhes adicionais
- Mostra m√©tricas complementares
- Clique novamente para colapsar

### Ver Trends
- Seta verde ‚Üë = Positivo
- Seta vermelha ‚Üì = Negativo
- Percentual ao lado

## Criando uma Ordem de Servi√ßo

1. Menu ‚Üí "Ordens de Servi√ßo"
2. Bot√£o "Nova OS"
3. Preencha:
   - Cliente
   - Servi√ßos (m√∫ltiplos)
   - Materiais
   - Equipe
   - Prazos
4. Salve

## Usando Credit Scoring

1. Menu ‚Üí "CFO & Executivo"
2. Aba "Credit Scoring"
3. Veja estat√≠sticas no topo
4. Clique em um card para filtrar
5. Use busca para encontrar cliente
6. Bot√£o "Recalcular Todos" atualiza scores

## Usando Thomaz AI

1. Clique no √≠cone do Thomaz (canto inferior direito)
2. OU v√° em Menu ‚Üí "Thomaz AI"
3. Digite sua pergunta
4. Thomaz responde com base nos dados reais
5. Pode perguntar sobre:
   - Dados financeiros
   - Clientes
   - Ordens de servi√ßo
   - An√°lises
   - Como usar funcionalidades

## Atalhos √öteis

### Teclado
- `Ctrl + K`: Busca global
- `Alt + F`: Ir para Financeiro
- `Alt + E`: Ir para Executivo
- `Alt + R`: Ir para Relat√≥rios

### Navega√ß√£o
- Clique no logo ‚Üí Volta ao in√≠cio
- Breadcrumbs ‚Üí Navega√ß√£o contextual
- Bot√£o voltar do navegador funciona',
  'user_guide',
  ARRAY['guia', 'tutorial', 'como-usar', 'ajuda'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'atualizado'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- 7. RESUMO DE FUNCIONALIDADES PRINCIPAIS
-- ========================================
INSERT INTO thomaz_knowledge_base (
  title,
  content,
  category,
  tags,
  metadata
) VALUES (
  'Funcionalidades Principais do Sistema',
  '# FUNCIONALIDADES PRINCIPAIS

## 1. Gest√£o de Clientes
- Cadastro PF (Pessoa F√≠sica) e PJ (Pessoa Jur√≠dica)
- Busca de CNPJ autom√°tica (ReceitaWS)
- Busca de CEP autom√°tica (ViaCEP)
- Hist√≥rico de compras
- An√°lise de cr√©dito
- Score autom√°tico
- Classifica√ß√£o ABC

## 2. Ordens de Servi√ßo
- Cria√ß√£o completa de OS
- M√∫ltiplos servi√ßos por OS
- Materiais vinculados
- Equipe de trabalho
- Custos detalhados
- Status: Pendente, Em Execu√ß√£o, Conclu√≠da
- Impress√£o de OS profissional
- Timeline de atividades
- Checklist de execu√ß√£o

## 3. Gest√£o Financeira
- Lan√ßamentos de receitas
- Lan√ßamentos de despesas
- Categoriza√ß√£o
- Contas banc√°rias
- Fluxo de caixa
- DRE (Demonstrativo de Resultado)
- Concilia√ß√£o banc√°ria
- Recorr√™ncias

## 4. Dashboard CFO
- 20+ KPIs executivos
- Cards interativos
- Receita Total
- EBITDA e margens
- ROI e payback
- Capital de giro
- Alertas financeiros
- Top 10 clientes
- An√°lise de sa√∫de financeira

## 5. Credit Scoring
- Score autom√°tico (0-1000)
- 5 categorias de risco
- Limites sugeridos
- An√°lise de hist√≥rico
- Filtros avan√ßados
- Rec√°lculo sob demanda

## 6. Cat√°logo de Servi√ßos
- Servi√ßos cadastrados
- Pre√ßos e margens
- Materiais necess√°rios
- Tempo de execu√ß√£o
- Fotos e descri√ß√µes
- Busca inteligente

## 7. Controle de Estoque
- Items cadastrados
- Quantidades
- Valores de custo e venda
- Alertas de estoque m√≠nimo
- Entrada e sa√≠da
- Invent√°rio

## 8. Gest√£o de Funcion√°rios
- Cadastro completo
- Documentos
- Cargos e sal√°rios
- Hist√≥rico
- Aloca√ß√£o em OS

## 9. WhatsApp CRM
- Conex√£o via QR Code
- Recebimento de mensagens
- Envio de mensagens
- Criar OS do chat
- Hist√≥rico de conversas

## 10. Thomaz AI
- Assistente inteligente
- Acesso a dados reais
- An√°lises financeiras
- Sugest√µes
- Ajuda contextual
- Respostas baseadas em documenta√ß√£o

## 11. Relat√≥rios
- Dashboards interativos
- PDFs profissionais
- Exporta√ß√£o Excel
- Gr√°ficos din√¢micos
- Filtros avan√ßados
- Agendamento

## 12. Email Corporativo
- Envio de emails
- Recebimento
- Anexos
- Templates
- Integra√ß√£o com documentos

## 13. Automa√ß√µes
- Workflows autom√°ticos
- Triggers configur√°veis
- A√ß√µes programadas
- Notifica√ß√µes

## 14. Auditoria
- Logs de todas as a√ß√µes
- Rastreamento de mudan√ßas
- Hist√≥rico completo
- Seguran√ßa

## 15. Personaliza√ß√£o
- Temas customiz√°veis
- Logo da empresa
- Cores
- Layout
- Prefer√™ncias',
  'system_documentation',
  ARRAY['funcionalidades', 'recursos', 'features'],
  jsonb_build_object(
    'version', '6.0',
    'date', '2025-10-28',
    'status', 'completo'
  )
) ON CONFLICT (title) DO UPDATE SET
  content = EXCLUDED.content,
  updated_at = NOW();

-- ========================================
-- CRIAR √çNDICES PARA PERFORMANCE
-- ========================================

-- √çndice para busca r√°pida por categoria
CREATE INDEX IF NOT EXISTS idx_thomaz_kb_category ON thomaz_knowledge_base(category);

-- √çndice para busca por tags
CREATE INDEX IF NOT EXISTS idx_thomaz_kb_tags ON thomaz_knowledge_base USING gin(tags);

-- √çndice full-text search
CREATE INDEX IF NOT EXISTS idx_thomaz_kb_search ON thomaz_knowledge_base USING gin(to_tsvector('portuguese', title || ' ' || content));

-- ========================================
-- ATUALIZAR METADADOS
-- ========================================

-- Marcar √∫ltima atualiza√ß√£o do conhecimento
UPDATE thomaz_system_config
SET
  config_value = jsonb_build_object(
    'last_knowledge_update', NOW(),
    'total_documents', (SELECT COUNT(*) FROM thomaz_knowledge_base),
    'version', '6.0',
    'status', 'updated'
  )
WHERE config_key = 'knowledge_base_status';

-- Se n√£o existir, criar
INSERT INTO thomaz_system_config (config_key, config_value)
VALUES (
  'knowledge_base_status',
  jsonb_build_object(
    'last_knowledge_update', NOW(),
    'total_documents', (SELECT COUNT(*) FROM thomaz_knowledge_base),
    'version', '6.0',
    'status', 'updated'
  )
)
ON CONFLICT (config_key) DO UPDATE SET
  config_value = EXCLUDED.config_value,
  updated_at = NOW();

-- ========================================
-- VERIFICA√á√ÉO FINAL
-- ========================================

-- Mostrar resumo do que foi agregado
SELECT
  category,
  COUNT(*) as total_docs,
  MAX(updated_at) as last_updated
FROM thomaz_knowledge_base
GROUP BY category
ORDER BY category;

-- Mostrar documentos mais recentes
SELECT
  title,
  category,
  array_length(tags, 1) as num_tags,
  updated_at
FROM thomaz_knowledge_base
ORDER BY updated_at DESC
LIMIT 10;

COMMIT;
